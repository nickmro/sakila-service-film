openapi: "3.0.0"
info:
  version: 1.0.0
  title: Sakila Film Service REST API
  description: A REST API that serves film data from the Sakila sample database.
servers:
  - url: http://localhost:3000
paths:
  /films:
    get:
      description: |
        Returns a list of films
      operationId: get films
      parameters:
        - name: category
          in: query
          description: category to filter on
          required: false
          style: form
          schema:
            type: string
        - name: limit
          in: query
          description: maximum number of films to return
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: the number of films to skip
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: films response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Film'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /films/{id}:
    get:
      description: Returns the film with the given ID
      operationId: get film
      parameters:
        - name: id
          in: path
          description: ID of the film to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: film response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Film'
        default:
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Film:
      type: object
      required:
        - film_id
        - title
        - language_id
        - rental_duration
        - rental_rate
        - replacement_cost
        - last_update
      properties:
        film_id:
          type: integer
        title:
          type: string
        description:
          type: string
        release_year:
          type: integer
        actors:
          type: array
          items:
            $ref: '#/components/schemas/Actor'
        language_id:
          type: integer
        original_language_id:
          type: integer
        rental_duration:
          type: integer
        rental_rate:
          type: number
        length:
          type: integer
        replacement_cost:
          type: number
        rating:
          type: string
        special_features:
          type: array
          items:
            type: integer
        last_update:
          type: string
          
    Actor:
      type: object
      required:
        - actor_id
        - first_name
        - last_name
        - last_update
      properties:
        actor_id:
          type: integer
        first_name:
          type: string
        last_name:
          type: string
        last_update:
          type: string
          
    Error:
      type: object
      required:
        - code
        - message
      properties:
        error:
          type: string
          enum: [internal, not_found]
        message:
          type: string
